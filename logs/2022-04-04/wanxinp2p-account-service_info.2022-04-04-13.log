[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:45,184 INFO [main][DefaultApplicationProvider.java:85] - App ID is set to account-service by app.id property from System Property
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:45,189 INFO [main][DefaultServerProvider.java:108] - Environment is set to [dev] by JVM system property 'env'.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:45,217 WARN [main][DefaultMetaServerProvider.java:39] - Could not find meta server address, because it is not available in neither (1) JVM system property 'apollo.meta', (2) OS env variable 'APOLLO_META' (3) property 'apollo.meta' from server.properties nor (4) property 'apollo.meta' from app.properties
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:45,221 INFO [main][MetaDomainConsts.java:93] - Located meta server address http://localhost:8080 for env DEV from com.ctrip.framework.apollo.core.internals.LegacyMetaServerProvider
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:55,083 INFO [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:55,963 INFO [main][RepositoryConfigurationDelegate.java:244] - Multiple Spring Data modules found, entering strict repository configuration mode!
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:55,966 INFO [main][RepositoryConfigurationDelegate.java:126] - Bootstrapping Spring Data repositories in DEFAULT mode.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:55,990 INFO [main][RepositoryConfigurationDelegate.java:182] - Finished Spring Data repository scanning in 13ms. Found 0 repository interfaces.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:56,072 WARN [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:56,138 INFO [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'com.ctrip.framework.apollo.spring.boot.ApolloAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:56,260 INFO [main][GenericScope.java:294] - BeanFactory id=7c904894-a244-3bce-af62-5529de436166
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:56,280 WARN [main][PropertySourcesDeducer.java:75] - Multiple PropertySourcesPlaceholderConfigurer beans registered [propertySourcesPlaceholderConfigurer, org.springframework.context.support.PropertySourcesPlaceholderConfigurer], falling back to Environment
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:56,296 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:56,304 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQAutoConfiguration$$EnhancerBySpringCGLIB$$1dc502f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:56,314 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketmq-org.apache.rocketmq.spring.autoconfigure.RocketMQProperties' of type [org.apache.rocketmq.spring.autoconfigure.RocketMQProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:57,349 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'defaultMQProducer' of type [org.apache.rocketmq.client.producer.DefaultMQProducer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:57,352 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$50c2738e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:57,354 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$30f35a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:57,357 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$be261b96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:57,362 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:57,364 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:57,368 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$e4f192c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:57,373 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:57,373 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$32ce111d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:57,402 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:57,402 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.data.web.config.SpringDataJacksonConfiguration' of type [org.springframework.data.web.config.SpringDataJacksonConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:57,405 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonGeoModule' of type [org.springframework.data.geo.GeoModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:57,407 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:44:57,425 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:00,372 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'rocketMQTemplate' of type [org.apache.rocketmq.spring.core.RocketMQTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:00,374 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'transactionHandlerRegistry' of type [org.apache.rocketmq.spring.config.TransactionHandlerRegistry] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:00,431 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f52ef3fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:00,456 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:00,464 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:00,473 INFO [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$1148f6fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:00,736 INFO [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 53030 (http)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:00,748 INFO [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-53030"]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:00,755 INFO [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:00,756 INFO [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:00,761 INFO [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_261\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Python27\;C:\Program Files\Python27\Scripts;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files\Eclipse Foundation\jdk-11.0.12.7-hotspot\bin;C:\Program Files (x86)\RSA SecurID Token Common;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\software\mysql-8.0.21-winx64\bin;D:\software\TortoiseSVN\bin;D:\software\instantclient_11_2;D:\software\software_2\node.js\;C:\ProgramData\chocolatey\bin;D:\compileEnv\mingw64\bin;D:\software\Git\cmd;D:\software\Redis\;C:\Program Files\Java\jdk1.8.0_261\bin;D:\software\apache-maven-3.6.3-bin\apache-maven-3.6.3\bin;C:\Users\DELL\AppData\Local\Microsoft\WindowsApps;D:\software\mysql-8.0.21-winx64\bin;D:\software\software_2\vscode\Microsoft VS Code\bin;C:\Users\DELL\AppData\Roaming\npm;D:\compileEnv\mingw64\bin;;D:\software\idea\IntelliJ IDEA 2021.1\bin;;D:\software\GitHub CLI\;.]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:00,923 INFO [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:00,923 INFO [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 5828 ms
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:01,045 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:01,046 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:01,056 INFO [main][DynamicPropertyFactory.java:281] - DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@639948a2
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:01,152 INFO [main][DruidDataSourceAutoConfigure.java:56] - Init DruidDataSource
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:01,391 INFO [main][DruidDataSource.java:1002] - {dataSource-1} inited
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:02,479 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:02,479 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:03,208 INFO [main][InetUtils.java:170] - Cannot determine local hostname
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:04,220 INFO [main][EndpointLinksResolver.java:59] - Exposing 2 endpoint(s) beneath base path '/actuator'
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:04,429 INFO [main][PropertySourcedRequestMappingHandlerMapping.java:69] - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:04,447 WARN [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:04,448 INFO [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:04,567 INFO [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:06,695 INFO [main][InetUtils.java:170] - Cannot determine local hostname
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:06,877 INFO [main][InstanceInfoFactory.java:71] - Setting initial instance status as: STARTING
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:06,908 INFO [main][DiscoveryClient.java:349] - Initializing Eureka in region us-east-1
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:07,591 INFO [main][DiscoveryJerseyProvider.java:70] - Using JSON encoding codec LegacyJacksonJson
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:07,591 INFO [main][DiscoveryJerseyProvider.java:71] - Using JSON decoding codec LegacyJacksonJson
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:07,682 INFO [main][DiscoveryJerseyProvider.java:80] - Using XML encoding codec XStreamXml
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:07,683 INFO [main][DiscoveryJerseyProvider.java:81] - Using XML decoding codec XStreamXml
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:07,904 INFO [main][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,425 INFO [main][DiscoveryClient.java:958] - Disable delta property : false
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,426 INFO [main][DiscoveryClient.java:959] - Single vip registry refresh property : null
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,426 INFO [main][DiscoveryClient.java:960] - Force full registry fetch : false
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,426 INFO [main][DiscoveryClient.java:961] - Application is null : false
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,426 INFO [main][DiscoveryClient.java:962] - Registered Applications size is zero : true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,426 INFO [main][DiscoveryClient.java:964] - Application version is -1: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,427 INFO [main][DiscoveryClient.java:1047] - Getting all instance registry info from the eureka server
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,586 INFO [main][DiscoveryClient.java:1056] - The response status is 200
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,587 INFO [main][DiscoveryClient.java:1270] - Starting heartbeat executor: renew interval is: 30
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,590 INFO [main][InstanceInfoReplicator.java:60] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,593 INFO [main][DiscoveryClient.java:449] - Discovery Client initialized at timestamp 1649051108592 with initial instances count: 0
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,594 INFO [main][EurekaServiceRegistry.java:42] - Registering application ACCOUNT-SERVICE with eureka with status UP
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,595 INFO [main][DiscoveryClient.java:1305] - Saw local status change event StatusChangeEvent [timestamp=1649051108595, current=UP, previous=STARTING]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,596 INFO [main][DocumentationPluginsBootstrapper.java:147] - Context refreshed
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,597 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:826] - DiscoveryClient_ACCOUNT-SERVICE/account-service:192.168.56.1:53030: registering service...
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,603 INFO [main][DocumentationPluginsBootstrapper.java:150] - Found 1 custom documentation plugin(s)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,634 INFO [main][ApiListingReferenceScanner.java:41] - Scanning for api listing references
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,677 INFO [DiscoveryClient-InstanceInfoReplicator-0][DiscoveryClient.java:835] - DiscoveryClient_ACCOUNT-SERVICE/account-service:192.168.56.1:53030 - registration status: 204
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,788 INFO [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-53030"]
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,802 INFO [main][TomcatWebServer.java:204] - Tomcat started on port(s): 53030 (http) with context path '/account'
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,803 INFO [main][EurekaAutoServiceRegistration.java:141] - Updating port to 53030
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:08,805 INFO [main][StartupInfoLogger.java:59] - Started Wanxinp2pAccountServiceApplication in 27.882 seconds (JVM running for 29.617)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:09,826 INFO [RMI TCP Connection(1)-192.168.56.1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:09,826 INFO [RMI TCP Connection(1)-192.168.56.1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:09,838 INFO [RMI TCP Connection(1)-192.168.56.1][FrameworkServlet.java:546] - Completed initialization in 12 ms
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:31,009 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:32,399 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:38,589 INFO [DiscoveryClient-CacheRefreshExecutor-0][DiscoveryClient.java:958] - Disable delta property : false
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:38,589 INFO [DiscoveryClient-CacheRefreshExecutor-0][DiscoveryClient.java:959] - Single vip registry refresh property : null
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:38,589 INFO [DiscoveryClient-CacheRefreshExecutor-0][DiscoveryClient.java:960] - Force full registry fetch : false
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:38,590 INFO [DiscoveryClient-CacheRefreshExecutor-0][DiscoveryClient.java:961] - Application is null : false
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:38,590 INFO [DiscoveryClient-CacheRefreshExecutor-0][DiscoveryClient.java:962] - Registered Applications size is zero : true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:38,590 INFO [DiscoveryClient-CacheRefreshExecutor-0][DiscoveryClient.java:964] - Application version is -1: false
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:38,590 INFO [DiscoveryClient-CacheRefreshExecutor-0][DiscoveryClient.java:1047] - Getting all instance registry info from the eureka server
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:45:38,622 INFO [DiscoveryClient-CacheRefreshExecutor-0][DiscoveryClient.java:1056] - The response status is 200
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:46:01,009 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:46:02,399 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:46:31,006 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:46:32,386 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:47:01,008 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:47:02,387 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:47:31,006 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:47:32,385 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:48:01,016 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:48:02,390 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:48:31,019 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:48:32,387 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:49:01,010 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:49:02,387 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:49:31,009 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:49:32,387 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:50:01,007 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:50:02,388 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:50:08,430 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:50:31,016 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:50:32,389 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:51:01,005 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:51:02,387 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:51:31,007 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:51:32,395 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:52:01,006 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:52:02,387 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:52:31,005 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:52:32,387 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:53:01,007 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:53:02,387 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:53:31,006 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:53:32,387 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:54:01,012 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:54:02,386 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:54:29,245 ERROR [http-nio-53030-exec-2][DirectJDKLog.java:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [/account] threw exception [Request processing failed; nested exception is com.alibaba.fastjson.JSONException: syntax error, expect {, actual error, pos 0, fastjson-version 1.2.47] with root cause
com.alibaba.fastjson.JSONException: syntax error, expect {, actual error, pos 0, fastjson-version 1.2.47
	at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:451)
	at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:271)
	at com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer.deserialze(JavaBeanDeserializer.java:267)
	at com.alibaba.fastjson.parser.DefaultJSONParser.parseObject(DefaultJSONParser.java:661)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:365)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:269)
	at com.alibaba.fastjson.JSON.parseObject(JSON.java:488)
	at cn.itcast.wanxinp2p.common.util.OkHttpUtil.post(OkHttpUtil.java:41)
	at cn.itcast.wanxinp2p.account.service.SmsService.verifySmsCode(SmsService.java:43)
	at cn.itcast.wanxinp2p.account.service.SmsService$$FastClassBySpringCGLIB$$c6099c70.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at cn.itcast.wanxinp2p.account.service.SmsService$$EnhancerBySpringCGLIB$$99d44ba9.verifySmsCode(<generated>)
	at cn.itcast.wanxinp2p.account.service.SmsService$$FastClassBySpringCGLIB$$c6099c70.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at cn.itcast.wanxinp2p.account.service.SmsService$$EnhancerBySpringCGLIB$$e5ef8be7.verifySmsCode(<generated>)
	at cn.itcast.wanxinp2p.account.service.AccountServiceImpl.checkMobile(AccountServiceImpl.java:24)
	at cn.itcast.wanxinp2p.account.service.AccountServiceImpl$$FastClassBySpringCGLIB$$3c48975c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at cn.itcast.wanxinp2p.account.service.AccountServiceImpl$$EnhancerBySpringCGLIB$$30e042a.checkMobile(<generated>)
	at cn.itcast.wanxinp2p.account.service.AccountServiceImpl$$FastClassBySpringCGLIB$$3c48975c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at cn.itcast.wanxinp2p.account.service.AccountServiceImpl$$EnhancerBySpringCGLIB$$2845d30.checkMobile(<generated>)
	at cn.itcast.wanxinp2p.account.controller.AccountController.checkMobile(AccountController.java:58)
	at cn.itcast.wanxinp2p.account.controller.AccountController$$FastClassBySpringCGLIB$$8c8cf652.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.itcast.wanxinp2p.account.controller.AccountController$$EnhancerBySpringCGLIB$$64bb3a1b.checkMobile(<generated>)
	at cn.itcast.wanxinp2p.account.controller.AccountController$$FastClassBySpringCGLIB$$8c8cf652.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.itcast.wanxinp2p.account.controller.AccountController$$EnhancerBySpringCGLIB$$f09d1085.checkMobile(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:54:31,008 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:54:32,397 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:55:01,010 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:55:02,386 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:55:08,433 INFO [AsyncResolver-bootstrap-executor-0][ConfigClusterResolver.java:43] - Resolving eureka endpoints via configuration
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:55:31,010 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:55:32,387 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:56:01,009 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:56:02,386 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:56:31,006 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:56:32,386 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:57:01,005 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:57:02,386 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:57:31,018 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:57:32,388 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:58:01,009 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:58:02,386 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:58:31,005 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:58:32,383 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:59:01,009 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:59:02,385 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:59:15,712 ERROR [http-nio-53030-exec-4][DirectJDKLog.java:175] - Servlet.service() for servlet [dispatcherServlet] in context with path [/account] threw exception [Request processing failed; nested exception is cn.itcast.wanxinp2p.common.domain.BusinessException] with root cause
cn.itcast.wanxinp2p.common.domain.BusinessException
	at cn.itcast.wanxinp2p.account.service.SmsService.verifySmsCode(SmsService.java:46)
	at cn.itcast.wanxinp2p.account.service.SmsService$$FastClassBySpringCGLIB$$c6099c70.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at cn.itcast.wanxinp2p.account.service.SmsService$$EnhancerBySpringCGLIB$$99d44ba9.verifySmsCode(<generated>)
	at cn.itcast.wanxinp2p.account.service.SmsService$$FastClassBySpringCGLIB$$c6099c70.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at cn.itcast.wanxinp2p.account.service.SmsService$$EnhancerBySpringCGLIB$$e5ef8be7.verifySmsCode(<generated>)
	at cn.itcast.wanxinp2p.account.service.AccountServiceImpl.checkMobile(AccountServiceImpl.java:24)
	at cn.itcast.wanxinp2p.account.service.AccountServiceImpl$$FastClassBySpringCGLIB$$3c48975c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at cn.itcast.wanxinp2p.account.service.AccountServiceImpl$$EnhancerBySpringCGLIB$$30e042a.checkMobile(<generated>)
	at cn.itcast.wanxinp2p.account.service.AccountServiceImpl$$FastClassBySpringCGLIB$$3c48975c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at com.alibaba.druid.support.spring.stat.DruidStatInterceptor.invoke(DruidStatInterceptor.java:73)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at cn.itcast.wanxinp2p.account.service.AccountServiceImpl$$EnhancerBySpringCGLIB$$2845d30.checkMobile(<generated>)
	at cn.itcast.wanxinp2p.account.controller.AccountController.checkMobile(AccountController.java:58)
	at cn.itcast.wanxinp2p.account.controller.AccountController$$FastClassBySpringCGLIB$$8c8cf652.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.itcast.wanxinp2p.account.controller.AccountController$$EnhancerBySpringCGLIB$$64bb3a1b.checkMobile(<generated>)
	at cn.itcast.wanxinp2p.account.controller.AccountController$$FastClassBySpringCGLIB$$8c8cf652.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:684)
	at cn.itcast.wanxinp2p.account.controller.AccountController$$EnhancerBySpringCGLIB$$f09d1085.checkMobile(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:59:31,006 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
[wanxinp2p-account-service][${env:SERVER_PORT}] 2022-04-04 13:59:32,388 INFO [NettyClientSelector_1][Slf4jLoggerFactory.java:95] - closeChannel: close the connection to remote address[] result: true
